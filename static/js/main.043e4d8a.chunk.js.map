{"version":3,"sources":["store/actions/index.js","components/todoheader/index.js","components/todotabs/index.js","components/todolistheader/index.js","components/todobutton/index.js","components/todoform/index.js","components/modal/index.js","utils/index.js","components/todolistrow/index.js","components/todolist/index.js","components/addtodo/index.js","components/tododashboard/index.js","App.js","store/reducers/asynctaskreducer/index.js","store/reducers/tabfilterreducer/index.js","store/reducers/todoreducer/index.js","Mockdata.js","store/reducers/formeditreducer/index.js","store/reducers/sorttodoreducer/index.js","store/index.js","index.js"],"names":["asyncImitator","dispatch","action","apiCallStarted","setTimeout","apiCallCompleted","type","connect","searchTodo","searchText","payload","getState","isFetching","props","searchDebounce","_","debounce","searchtext","className","id","placeholder","onChange","event","preventDefault","target","value","replace","state","filter","showAll","showPending","showCompleted","React","useState","setValue","Fragment","Tabs","newValue","indicatorColor","centered","style","color","Tab","label","onClick","sortBySummary","sortByPriority","sortByCreatedOn","sortByDueDate","sortByActions","Button","name","class_","posts","todos","postIdToEdit","formEdit","formId","handleFormSubmit","handleCancel","title","setTitle","titleError","setTitleError","description","setDescription","descriptionError","setDescriptionError","selectedOption","setSelectedOption","priority","setPriority","dueDate","setDueDate","postToEdit","setPostToEdit","createdAt","setCreatedAt","defaultFormType","useEffect","populateFields","handleOptionChange","ev","console","log","post","getPostById","currentState","find","htmlFor","e","onBlur","length","checked","newTodo","Date","now","toISOString","substring","handleSubmit","Modal","show","content","actions","onDismiss","stopPropagation","prioritySort","a","b","t","high","medium","low","none","timeSortDueDate","t1","t2","getTime","timeSortCreatedOn","actionSort","Number","getSelectedRowsIds","ids","map","item","push","filterBy","sort","handleTableRowClick","handleEdit","handleDelete","handleDone","handleOnReOpen","handleCheckChange","filteredTodos","todo","getFilteredList","sortBy","order","newTodos","key","hasOwnProperty","varA","toUpperCase","varB","comparison","compareValues","reverse","index","Checkbox","inputProps","IconButton","aria-label","component","deleteTodo","postId","reOpenTodo","markDone","editTodo","data","setFormToEdit","clearFormToEdit","markBulkDone","postIds","markBulkPending","updateChecboxValue","isChecked","ischecked","editModalIsOpen","setEditModalIsOpen","deleteModalIsOpen","setDeleteModalIsOpen","deleteItem","setDeleteItem","isOpenDescriptionModal","setIsOpenDescriptionModal","modalContent","setModalContent","document","onkeyup","which","onEditDismiss","onDeleteConfirmation","onViewDismiss","ctrlKey","shiftKey","getElementById","focus","matches","renderDescription","openDescriptionModal","res","addTodo","isOpen","setIsOpen","issubmit","setSubmit","Data","setData","TodoDashboard","App","AsyncTaskReducer","initialState","TabFilterReducer","TodoReducer","alltodos","reduce","c","x","row","includes","FormEditReducer","intialState","SortTodoReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.043e4d8a.chunk.js","sourcesContent":["export const API_CALL_STARTED = \"API_CALL_STARTED\";\r\nexport const API_CALL_COMPLETED = \"API_CALL_COMPLETED\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const MARK_DONE = \"MARK_DONE\";\r\nexport const RE_OPEN = \"RE_OPEN\";\r\nexport const GLOBAL_SEARCH = \"GLOBAL_SEARCH\";\r\nexport const SHOW_ALL = \"SHOW_ALL\";\r\nexport const SHOW_PENDING = \"SHOW_PENDING\";\r\nexport const SHOW_COMPLETED = \"SHOW_COMPLETED\";\r\nexport const SORT_BY_SUMMARY = \"SORT_BY_SUMMARY\";\r\nexport const SORT_BY_PRIORITY = \"SORT_BY_PRIORITY \";\r\nexport const SORT_BY_CREATED_ON = \"SORT_BY_CREATED_ON\";\r\nexport const SORT_BY_DUE_DATE = \"SORT_BY_DUE_DATE\";\r\nexport const SORT_BY_ACTIONS = \"SORT_BY_ACTIONS\";\r\nexport const SET_FORM_TO_EDIT = \"SET_FORM_TO_EDIT\";\r\nexport const CLEAR_FROM_TO_EDIT = \"CLEAR_FROM_TO_EDIT\";\r\nexport const BULK_DONE = \"BULK_DONE\";\r\nexport const BULK_PENDING = \"BULK_PENDING\";\r\nexport const UPDATE_CHECKBOX = \"UPDATE_CHECKBOX\";\r\n\r\n\r\nconst asyncImitator = (dispatch, action) => {\r\n    dispatch(apiCallStarted());\r\n    setTimeout(() => {\r\n        dispatch(action);\r\n        dispatch(apiCallCompleted());\r\n    }, 500);\r\n};\r\n\r\nexport const apiCallStarted = () => ({\r\n    type: API_CALL_STARTED\r\n});\r\n\r\nexport const apiCallCompleted = () => ({\r\n    type: API_CALL_COMPLETED\r\n});\r\n\r\nexport const addTodo = data => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: ADD_TODO, payload: data });\r\n        }\r\n    };\r\n};\r\n\r\nexport const editTodo = data => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: EDIT_TODO, payload: data });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const deleteTodo = payload => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: DELETE_TODO, payload });\r\n        }\r\n    };\r\n};\r\n\r\nexport const markDone = id => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: MARK_DONE, payload: id });\r\n        }\r\n    };\r\n};\r\n\r\nexport const reOpenTodo = id => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: RE_OPEN, payload: id });\r\n        }\r\n    };\r\n};\r\n\r\nexport const globalTodoSearch = payload => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: GLOBAL_SEARCH, payload });\r\n        }\r\n    };\r\n};\r\n\r\nexport const showAll = () => {\r\n    return {\r\n        type: SHOW_ALL\r\n    };\r\n};\r\n\r\nexport const showCompleted = () => {\r\n    return {\r\n        type: SHOW_COMPLETED\r\n    };\r\n};\r\n\r\nexport const showPending = () => {\r\n    return {\r\n        type: SHOW_PENDING\r\n    };\r\n};\r\n\r\nexport const setFormToEdit = data => {\r\n    return {\r\n        type: SET_FORM_TO_EDIT,\r\n        payload: data\r\n    };\r\n};\r\n\r\nexport const clearFormToEdit = () => {\r\n    return {\r\n        type: CLEAR_FROM_TO_EDIT\r\n    };\r\n};\r\n\r\nexport const sortBySummary = () => {\r\n    return {\r\n        type: SORT_BY_SUMMARY\r\n    };\r\n};\r\n\r\nexport const sortByPriority = () => {\r\n    return {\r\n        type: SORT_BY_PRIORITY\r\n    };\r\n};\r\n\r\nexport const sortByCreatedOn = () => {\r\n    return {\r\n        type: SORT_BY_CREATED_ON\r\n    };\r\n};\r\n\r\nexport const sortByDueDate = () => {\r\n    return {\r\n        type: SORT_BY_DUE_DATE\r\n    };\r\n};\r\n\r\nexport const sortByActions = () => {\r\n    return {\r\n        type: SORT_BY_ACTIONS\r\n    };\r\n};\r\n\r\nexport const markBulkDone = payload => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: BULK_DONE, payload });\r\n        }\r\n    };\r\n};\r\n\r\nexport const markBulkPending = payload => {\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: BULK_PENDING, payload });\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const updateChecboxValue = (id, ischecked) => {\r\n    console.log(id, ischecked);\r\n    return (dispatch, getState) => {\r\n        const { isFetching } = getState();\r\n        if (!isFetching) {\r\n            asyncImitator(dispatch, { type: UPDATE_CHECKBOX, payload: {id:id, ischecked:ischecked} });\r\n        }\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { globalTodoSearch } from \"../../store/actions\";\r\nimport _ from \"lodash\";\r\n\r\nconst TodoHeader = (props) => {\r\n  const { searchTodo } = props;\r\n\r\n  // to search todos\r\n  const handelSearch = (event) => {\r\n    event.preventDefault()\r\n    const searchtext = event.target.value.replace(/^\\s+/g, '');\r\n    searchDebounce(searchtext);\r\n  };\r\n\r\n  // debaunce for todos search to reduce the function call\r\n  const searchDebounce = _.debounce(function (searchtext) {\r\n    searchTodo(searchtext);\r\n  }, 1000);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App-header\">\r\n      <header>Surify Todo App</header>\r\n      <input type='text' className='search' id=\"seachinput\" placeholder='Enter title/summary to search' onChange={handelSearch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchTodo: searchText => dispatch(globalTodoSearch(searchText))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoHeader);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { showAll, showPending, showCompleted } from \"../../store/actions\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst TodoTabs = ({ showAll, showPending, showCompleted }) => {\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        centered\r\n        style={{ color: \"secondary\" }}\r\n      >\r\n        <Tab label=\"SHOW ALL\" onClick={showAll} />\r\n        <Tab label=\"COMPLETED\" onClick={showCompleted} />\r\n        <Tab label=\"PENDING\" onClick={showPending} />\r\n      </Tabs>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    showAll: () => dispatch(showAll()),\r\n    showPending: () => dispatch(showPending()),\r\n    showCompleted: () => dispatch(showCompleted())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoTabs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sortBySummary, sortByPriority, sortByCreatedOn, sortByDueDate, sortByActions } from \"../../store/actions\";\r\n\r\nconst TodoListHeader = ({ sortBySummary, sortByPriority, sortByCreatedOn, sortByDueDate, sortByActions }) => {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n      <th onClick={sortBySummary}></th>\r\n      <th onClick={sortBySummary}>Summary</th>\r\n      <th onClick={sortByPriority}>Priority</th>\r\n      <th onClick={sortByCreatedOn}>Created On</th>\r\n      <th onClick={sortByDueDate}>Due Date</th>\r\n      <th onClick={sortByActions}>Actions</th>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    sortBySummary: () => dispatch(sortBySummary()),\r\n    sortByPriority: () => dispatch(sortByPriority()),\r\n    sortByCreatedOn: () => dispatch(sortByCreatedOn()),\r\n    sortByDueDate: () => dispatch(sortByDueDate()),\r\n    sortByActions: () => dispatch(sortByActions())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoListHeader);\r\n","import React from \"react\";\r\n\r\nconst Button = ({ name = \"Btn\", class_ = \"\", onClick = null, type = \"\" }) => {\r\n  return (\r\n    <>\r\n      <button type={type} className={\"button \" + class_} onClick={onClick}>\r\n        {name}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../todobutton\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TodoForm = ({ type, formId, handleFormSubmit, handleCancel, postIdToEdit, posts }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleError, setTitleError] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n  const [selectedOption, setSelectedOption] = useState(false);\r\n  const [priority, setPriority] = useState(\"none\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [postToEdit, setPostToEdit] = useState(null);\r\n  const [createdAt, setCreatedAt] = useState(null);\r\n  let defaultFormType = 0; // ADD Form\r\n\r\n  if (type === \"edit\") {\r\n    defaultFormType = 1;\r\n  }\r\n\r\n  useEffect(() => populateFields(), []);\r\n\r\n  const handleOptionChange = ev => {\r\n    console.log(ev.target.value);\r\n    setSelectedOption(ev.target.value);\r\n  };\r\n\r\n  const populateFields = () => {\r\n    if (postIdToEdit !== null) {\r\n      const post = getPostById(postIdToEdit);\r\n      setPostToEdit(post);\r\n      setTitle(post.title);\r\n      setDescription(post.description);\r\n      setPriority(post.priority);\r\n      setDueDate(post.dueDate);\r\n      setSelectedOption(post.currentState);\r\n      setCreatedAt(post.createdAt);\r\n    }\r\n  };\r\n\r\n  const getPostById = id => {\r\n    return posts.find(post => post.id === id);\r\n  };\r\n\r\n  const getDate = () => {\r\n    const today = new Date();\r\n    return today.toISOString().substring(0, 10);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (defaultFormType === 0) {\r\n      if (titleError === \"\" && descriptionError === \"\") {\r\n        const newTodo = {\r\n          id: Date.now() + \"\",\r\n          currentState: selectedOption,\r\n          title,\r\n          description,\r\n          createdAt: getDate(),\r\n          dueDate,\r\n          priority\r\n        };\r\n        handleFormSubmit(newTodo);\r\n      }\r\n    } else {\r\n      const newTodo = {\r\n        id: postToEdit.id,\r\n        currentState: selectedOption,\r\n        title,\r\n        description,\r\n        createdAt: postToEdit.createdAt,\r\n        dueDate,\r\n        priority\r\n      };\r\n      handleFormSubmit(newTodo);\r\n    }\r\n  };\r\n\r\n\r\n  const validateTitle = () => {\r\n    if (title.length < 10) setTitleError(\"Enter at least 10 characters\");\r\n    else if (title.length > 500) setTitleError(\"Max Length Exceeded\");\r\n    else setTitleError(\"\");\r\n  };\r\n\r\n  const validateDescription = () => {\r\n    if (description.length < 10)\r\n      setDescriptionError(\"Enter at least 10 characters\");\r\n    else if (description.length > 500)\r\n      setDescriptionError(\"Max Length Exceeded\");\r\n    else setDescriptionError(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form id={formId}>\r\n        <p>\r\n          <label htmlFor=\"title\">\r\n            <span> Title:</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n            id=\"title\"\r\n            onBlur={validateTitle}\r\n          />\r\n          <span className=\"error\">{titleError}</span>\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"description\">\r\n            <span> Description:</span>\r\n          </label>\r\n          <textarea\r\n            value={description}\r\n            onChange={e => setDescription(e.target.value)}\r\n\r\n            id=\"description\"\r\n            onBlur={validateDescription}\r\n          ></textarea>\r\n          <span className=\"error\">{descriptionError}</span>\r\n        </p>\r\n\r\n        <p>\r\n          <label htmlFor=\"due_date\">\r\n            <span>Due Date:</span>\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"due date\"\r\n            id=\"due_date\"\r\n            value={dueDate}\r\n            onChange={event => setDueDate(event.target.value)}\r\n          />\r\n        </p>\r\n\r\n        <p>\r\n          <label htmlFor=\"priority\">\r\n            <span>Priority:</span>\r\n          </label>\r\n          <select\r\n            id=\"priority\"\r\n            value={priority}\r\n            name=\"priority\"\r\n            onChange={e => setPriority(e.target.value)}\r\n          >\r\n            <option value=\"low\">Low</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"high\">High</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </p>\r\n        {defaultFormType === 1 && (\r\n          <div className=\"createdat\">\r\n            <p>\r\n              <label>\r\n                <span>Created At:</span>\r\n              </label>\r\n              <span>{createdAt}</span>\r\n            </p>\r\n          </div>\r\n        )}\r\n        {defaultFormType === 1 && (\r\n          <div className=\"createdat\">\r\n            <label>\r\n              <span>Current State:</span>\r\n            </label>\r\n            <fieldset>\r\n              <p className=\"radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"true\"\r\n                  checked={selectedOption === true}\r\n                  onChange={e => handleOptionChange(e)}\r\n                  id=\"closed_task\"\r\n                />\r\n                <label htmlFor=\"closed_task\">\r\n                  <span>Completed</span>\r\n                </label>\r\n              </p>\r\n              <p className=\"radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"false\"\r\n                  checked={selectedOption === false}\r\n                  onChange={e => handleOptionChange(e)}\r\n                  id=\"open_task\"\r\n                />\r\n                <label htmlFor=\"open_task\">\r\n                  <span>Pending</span>\r\n                </label>\r\n              </p>\r\n            </fieldset>\r\n          </div>\r\n        )}\r\n\r\n        <Button\r\n          name=\"Save\"\r\n          class_=\"submit\"\r\n          type=\"button\"\r\n          onClick={e => handleSubmit(e)}\r\n        />\r\n        <Button name=\"Cancel\" class_=\"cancel\" onClick={() => handleCancel()} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    posts: state.todos.todos,\r\n    postIdToEdit: state.formEdit\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoForm);\r\n","import React from \"react\";\r\n\r\nconst Modal = ({ show, title, content, actions, onDismiss }) => {\r\n  if (!show) return null;\r\n  return(\r\n    <div onClick={onDismiss} className=\"modal\">\r\n      <div className=\"backdrop\">\r\n        <div onClick={e => e.stopPropagation()} className=\"modal-content\">\r\n          <span onClick={onDismiss} className=\"close\">\r\n            &times;\r\n          </span>\r\n          <div className=\"modal-header\">\r\n            <h2 className=\"title\">{title}</h2>\r\n          </div>\r\n          <div className=\"content\">{content}</div>\r\n          <div className=\"actions\">{actions}</div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export function compareValues(key, order = \"asc\") {\n  return function innerSort(a, b) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      return 0;\n    }\n\n    const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return order === \"desc\" ? comparison * -1 : comparison;\n  };\n}\n\nexport const getFilteredList = (todos, filterBy) => {\n  const { showAll, showPending, showCompleted } = filterBy;\n  if (showAll) return todos;\n  else if (showPending)\n    return todos.filter(todo => todo.currentState === false);\n  else if (showCompleted)\n    return todos.filter(todo => todo.currentState === true);\n};\n\nexport const prioritySort = (a, b) => {\n  let t = {\n    high: 4,\n    medium: 3,\n    low: 2,\n    none: 1\n  };\n  return t[a.priority] > t[b.priority]\n    ? 1\n    : t[a.priority] === t[b.priority]\n    ? 0\n    : -1;\n};\n\nexport const timeSortDueDate = (a, b) => {\n  const t1 = new Date(a.dueDate);\n  const t2 = new Date(b.dueDate);\n  return t1.getTime() - t2.getTime();\n};\n\nexport const timeSortCreatedOn = (a, b) => {\n  const t1 = new Date(a.createdAt);\n  const t2 = new Date(b.createdAt);\n  return t1.getTime() - t2.getTime();\n};\n\nexport const actionSort = (a, b) => {\n  const t1 = Number(a.currentState);\n  const t2 = Number(b.currentState);\n  return t1 - t2;\n};\n\n// function to delete selected item from product list\nexport const getSelectedRowsIds = (todos) =>{\n  let ids = [];\n  todos.map((item) =>{\n    if(item.checked){\n      ids.push(item.id);\n    }\n  })\n  return ids;\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"../todobutton\";\r\nimport {\r\n  compareValues,\r\n  getFilteredList,\r\n  prioritySort,\r\n  timeSortCreatedOn,\r\n  timeSortDueDate,\r\n  actionSort\r\n} from \"../../utils\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst TodoListRow = ({ todos, filterBy, handleTableRowClick, sort, handleEdit, handleDelete, handleDone, handleOnReOpen, handleCheckChange }) => {\r\n  let filteredTodos = getFilteredList(todos, filterBy);\r\n  \r\n  if (sort.sortBy === \"title\") {\r\n    let order = sort.type ? \"asc\" : \"desc\";\r\n    const newTodos = filteredTodos.sort(compareValues(\"title\", order));\r\n    filteredTodos = newTodos;\r\n  }\r\n\r\n  if (sort.sortBy === \"priority\") {\r\n    const newTodos = filteredTodos.sort(prioritySort);\r\n    if (sort.type) filteredTodos = newTodos;\r\n    else filteredTodos = newTodos.reverse();\r\n  }\r\n\r\n  if (sort.sortBy === \"created_on\") {\r\n    const newTodos = filteredTodos.sort(timeSortCreatedOn);\r\n    if (sort.type) filteredTodos = newTodos;\r\n    else filteredTodos = newTodos.reverse();\r\n  }\r\n\r\n  if (sort.sortBy === \"due_date\") {\r\n    const newTodos = filteredTodos.sort(timeSortDueDate);\r\n    if (sort.type) filteredTodos = newTodos;\r\n    else filteredTodos = newTodos.reverse();\r\n  }\r\n\r\n  if (sort.sortBy === \"actions\") {\r\n    const newTodos = filteredTodos.sort(actionSort);\r\n    if (sort.type) filteredTodos = newTodos;\r\n    else filteredTodos = newTodos.reverse();\r\n  }\r\n\r\n  return filteredTodos.map((todo, index) => (\r\n    <tr className={\r\n      \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\r\n    } key={index} onClick={e => handleTableRowClick(e, todo.id)}>\r\n      <td>\r\n        <Checkbox\r\n          name={todo.id}\r\n          checked={todo.checked}\r\n          onChange={(e) => handleCheckChange(e)}\r\n          inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n      </td>\r\n      <td\r\n        className={\r\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\r\n        }\r\n      >\r\n        {todo.title}\r\n      </td>\r\n      <td\r\n        className={\r\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\r\n        }\r\n      >\r\n        {todo.priority}\r\n      </td>\r\n      <td\r\n        className={\r\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\r\n        }\r\n      >\r\n        {todo.createdAt}\r\n      </td>\r\n      <td\r\n        className={\r\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\r\n        }\r\n      >\r\n        {todo.dueDate}\r\n      </td>\r\n      <td\r\n        className={\r\n          \"table-data \" + (todo.currentState ? \"complete\" : \"in-complete\")\r\n        }\r\n      >\r\n        {todo.currentState ? (<div className=\"todo-item action\">\r\n          <Button name={\"Reopen\"} class_=\"re-open\" onClick={e => handleOnReOpen(e, todo.id)} />\r\n        </div>) : (<div className=\"todo-item action\">\r\n          <IconButton color=\"primary\" className=\"abc\" aria-label=\"upload picture\" component=\"span\" onClick={e => handleEdit(e, todo.id)}>\r\n            <EditIcon></EditIcon>\r\n          </IconButton>\r\n          <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\" onClick={e => handleDelete(e, todo.id)}>\r\n            <DeleteIcon></DeleteIcon>\r\n          </IconButton>\r\n          <IconButton style={{ color: \"green\" }} aria-label=\"upload picture\" component=\"span\" onClick={e => handleDone(e, todo.id)}>\r\n            <CheckCircleIcon></CheckCircleIcon>\r\n          </IconButton>\r\n        </div>)}\r\n      </td>\r\n    </tr>\r\n  ));\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos.todos,\r\n    filterBy: state.filter,\r\n    sort: state.sort\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoListRow);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../todobutton\";\r\nimport TodoForm from \"../todoform\";\r\nimport Modal from \"../modal\";\r\nimport TodoListRow from \"../todolistrow\";\r\nimport { getSelectedRowsIds } from \"../../utils\";\r\nimport { deleteTodo, reOpenTodo, markDone, editTodo, setFormToEdit, clearFormToEdit, markBulkDone, markBulkPending, updateChecboxValue } from \"../../store/actions\";\r\n\r\n\r\nconst TodoList = ({ todos, deleteTodo, reOpenTodo, markDone, setFormToEdit, clearFormToEdit, editTodo, markBulkDone, markBulkPending, updateChecboxValue }) => {\r\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n  const [deleteItem, setDeleteItem] = useState([]);\r\n  const [isOpenDescriptionModal, setIsOpenDescriptionModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    document.onkeyup = function (e) {\r\n\r\n      if (e.key === \"Escape\" || e.which === 27) {//\r\n        onEditDismiss();\r\n        onDeleteConfirmation();\r\n        onViewDismiss();\r\n      }\r\n      if ((e.ctrlKey && e.shiftKey && e.which === 70)) {\r\n        document.getElementById(\"seachinput\").focus();\r\n      }\r\n    }\r\n  }, []\r\n  )\r\n\r\n  const handleBulkDelete = () => {\r\n    let ids = getSelectedRowsIds(todos);\r\n    setDeleteModalIsOpen(true);\r\n    setDeleteItem(ids);\r\n  };\r\n\r\n  const handleBulkDone = () => {\r\n    let ids = getSelectedRowsIds(todos);\r\n    markBulkDone(ids);\r\n  };\r\n\r\n  const handleBulkPending = () => {\r\n    let ids = getSelectedRowsIds(todos);\r\n    markBulkPending(ids);\r\n  }\r\n\r\n  const handleEdit = (e, postId) => {\r\n    e.stopPropagation();\r\n    setFormToEdit(postId);\r\n    setEditModalIsOpen(true);\r\n  };\r\n\r\n  const onEditDismiss = () => {\r\n    setEditModalIsOpen(false);\r\n    clearFormToEdit();\r\n  };\r\n\r\n\r\n  const handleDelete = (e, postId) => {\r\n    e.stopPropagation();\r\n    setDeleteModalIsOpen(true);\r\n    setDeleteItem([postId]);\r\n  };\r\n\r\n  const onDeleteConfirmation = () => {\r\n    deleteTodo(deleteItem);\r\n    setDeleteItem([]);\r\n    setDeleteModalIsOpen(false);\r\n  };\r\n\r\n  const handleDone = (e, postId) => {\r\n    e.stopPropagation();\r\n    markDone(postId);\r\n  };\r\n\r\n  const handleOnReOpen = (e, postId) => {\r\n    e.stopPropagation();\r\n    reOpenTodo(postId);\r\n  };\r\n\r\n  const onViewDismiss = () => {\r\n    setIsOpenDescriptionModal(false);\r\n  };\r\n\r\n  const openDescriptionModal = postId => {\r\n    const item = todos.find(todo => todo.id === postId);\r\n\r\n    const renderDescription = (\r\n      <div>\r\n        <p>Title: {item.title}</p>\r\n        <p>Description: {item.description}</p>\r\n        <p>Created At: {item.createdAt}</p>\r\n        <p>Due Date: {item.dueDate}</p>\r\n        <p>Priority: {item.priority}</p>\r\n        <p>Current Status: {item.currentState === true ? \"Completed\" : \"Pending\"}</p>\r\n      </div>\r\n    );\r\n    setModalContent(renderDescription);\r\n    setIsOpenDescriptionModal(true);\r\n  };\r\n\r\n  const handleTableRowClick = (e, postId) => {\r\n    e.stopPropagation();\r\n    if (!e.target.matches(\"input.PrivateSwitchBase-input-38\")) {\r\n      openDescriptionModal(postId);\r\n    }\r\n\r\n  };\r\n  const handleCheckChange = (e) => {\r\n    const item = e.target.name;\r\n    const isChecked = e.target.checked;\r\n    updateChecboxValue(item, isChecked)\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tbody>\r\n        <TodoListRow handleTableRowClick={handleTableRowClick} handleEdit={handleEdit} handleDelete={handleDelete} handleDone={handleDone} handleOnReOpen={handleOnReOpen} handleCheckChange={handleCheckChange} />\r\n        <div className=\"bulkopsdiv\">\r\n          <p>You can select multiple rows by clicking on checkbox and perform </p>\r\n          <Button onClick={handleBulkDelete} name='Group Delete' class_='delete' />\r\n          <Button onClick={handleBulkDone} name='Group Done' class_='done' />\r\n          <Button onClick={handleBulkPending} name='Group Reopen' class_='re-open' />\r\n        </div>\r\n      </tbody>\r\n      <Modal\r\n        show={editModalIsOpen}\r\n        onDismiss={onEditDismiss}\r\n        title=\"Edit Todo\"\r\n        content={\r\n          <TodoForm\r\n            type=\"edit\"\r\n            handleCancel={onEditDismiss}\r\n            handleFormSubmit={res => {\r\n              editTodo(res);\r\n              onEditDismiss();\r\n            }}\r\n          />\r\n        }\r\n      />\r\n      <Modal\r\n        show={deleteModalIsOpen}\r\n        onDismiss={() => setDeleteModalIsOpen(false)}\r\n        title=\"Delete Todo Confirmation\"\r\n        content={<p>Do you want to delete this task?</p>}\r\n        actions={\r\n          <React.Fragment>\r\n            <Button\r\n              name=\"Yes\"\r\n              onClick={onDeleteConfirmation}\r\n              class_=\"delete\"\r\n            />\r\n            <Button\r\n              name=\"No\"\r\n              onClick={() => setDeleteModalIsOpen(false)}\r\n              class_=\"warning\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <Modal\r\n        show={isOpenDescriptionModal}\r\n        onDismiss={() => setIsOpenDescriptionModal(false)}\r\n        title=\"View Todo\"\r\n        content={modalContent}\r\n        actions={\r\n          <Button\r\n            name=\"Ok\"\r\n            onClick={() => setIsOpenDescriptionModal(false)}\r\n          />\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state.todos.todos\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteTodo: postId => dispatch(deleteTodo(postId)),\r\n    reOpenTodo: postId => dispatch(reOpenTodo(postId)),\r\n    markDone: postId => dispatch(markDone(postId)),\r\n    editTodo: postId => dispatch(editTodo(postId)),\r\n    setFormToEdit: postId => dispatch(setFormToEdit(postId)),\r\n    clearFormToEdit: postId => dispatch(clearFormToEdit(postId)),\r\n    markBulkDone: postIds => dispatch(markBulkDone(postIds)),\r\n    markBulkPending: postIds => dispatch(markBulkPending(postIds)),\r\n    updateChecboxValue: (postId, isChecked) => dispatch(updateChecboxValue(postId, isChecked))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../todobutton\";\r\nimport Modal from \"../modal\";\r\nimport TodoForm from \"../todoform\";\r\nimport { addTodo } from \"../../store/actions\";\r\n\r\nconst AddTodo = ({ addTodo }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [issubmit, setSubmit] = useState(false);\r\n  const [Data, setData] = useState(null);\r\n\r\n  const handleSubmit = () => {\r\n    setSubmit(false)\r\n    setIsOpen(false);\r\n    addTodo(Data);\r\n  };\r\n\r\n  const openConfirmationPopup = (data) => {\r\n    setSubmit(true)\r\n    setData(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-todo\">\r\n      <Button name=\"+\" class_=\"todo-btn\" onClick={() => setIsOpen(true)} />\r\n      {isOpen ? <Modal\r\n        show={isOpen}\r\n        title=\"Add Todo\"\r\n        content={\r\n          <TodoForm\r\n            formId=\"addForm\"\r\n            handleFormSubmit={openConfirmationPopup}\r\n            handleCancel={() => setIsOpen(false)}\r\n          />\r\n        }\r\n        onDismiss={() => setIsOpen(false)}\r\n      /> : null}\r\n      \r\n      {issubmit ? <Modal\r\n        show={issubmit}\r\n        onDismiss={() => setSubmit(false)}\r\n        title=\"Add Todo Confirmation\"\r\n        content={<p>Do you want to add this task?</p>}\r\n        actions={\r\n          <React.Fragment>\r\n            <Button\r\n              name=\"Yes\"\r\n              onClick={handleSubmit}\r\n              class_=\"warning\"\r\n            />\r\n            <Button\r\n              name=\"No\"\r\n              onClick={() => setSubmit(false)}\r\n              class_=\"delete\"\r\n            />\r\n          </React.Fragment>\r\n        }\r\n      /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTodo: todo => dispatch(addTodo(todo))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTodo);\r\n","import React from \"react\";\r\nimport TodoTabs from \"../todotabs\";\r\nimport TodoListHeader from \"../todolistheader\";\r\nimport TodoList from \"../todolist\";\r\nimport AddTodo from \"../addtodo\";\r\n\r\n\r\nconst TodoDashboard = () => {\r\n  return (\r\n    <div>\r\n      <TodoTabs />\r\n      <table>\r\n        <TodoListHeader />\r\n        <TodoList />\r\n        <AddTodo />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoDashboard;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport TodoHeader from \"./components/todoheader\";\nimport TodoDashboard from \"./components/tododashboard\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoHeader />\n      <TodoDashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import { API_CALL_STARTED, API_CALL_COMPLETED } from \"../../actions\";\r\n\r\nconst AsyncTaskReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case API_CALL_STARTED:\r\n      return (state = true);\r\n\r\n    case API_CALL_COMPLETED:\r\n      return (state = false);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default AsyncTaskReducer;\r\n","import { SHOW_ALL, SHOW_COMPLETED, SHOW_PENDING } from \"../../actions\";\r\n\r\nlet initialState = {\r\n    showAll: true,\r\n    showPending: false,\r\n    showCompleted: false\r\n}\r\nconst TabFilterReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ALL:\r\n            return { showAll: true, showPending: false, showCompleted: false };\r\n\r\n        case SHOW_COMPLETED:\r\n            return { showAll: false, showPending: false, showCompleted: true };\r\n\r\n        case SHOW_PENDING:\r\n            return { showAll: false, showPending: true, showCompleted: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default TabFilterReducer;\r\n","import dummyData from \"../../../Mockdata\";\r\nimport { ADD_TODO, DELETE_TODO, RE_OPEN, MARK_DONE, EDIT_TODO, GLOBAL_SEARCH, BULK_DONE, BULK_PENDING, UPDATE_CHECKBOX } from \"../../actions\";\r\n\r\nconst initialState = dummyData;\r\n\r\nconst TodoReducer = (state = { todos: initialState, alltodos: initialState }, action) => {\r\n    let ids;\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            const todo = { ...action.payload }\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, todo],\r\n                alltodos: [...state.alltodos, todo]\r\n            }\r\n\r\n        case EDIT_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.reduce((a, c) => { return c.id === action.payload.id ? [...a, action.payload] : [...a, c] }, []),\r\n                alltodos: state.alltodos.reduce((a, c) => { return c.id === action.payload.id ? [...a, action.payload] : [...a, c] }, [])\r\n            }\r\n\r\n        case DELETE_TODO:\r\n            ids = action.payload.map(x => x)\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(row => !ids.includes(row.id)),\r\n                alltodos: state.alltodos.filter(row => !ids.includes(row.id))\r\n            }\r\n\r\n        case MARK_DONE: ;\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(x => { return action.payload === x.id ? { ...x, currentState: true } : { ...x } }),\r\n                alltodos: state.alltodos.map(x => { return action.payload === x.id ? { ...x, currentState: true } : { ...x } }),\r\n            }\r\n\r\n        case RE_OPEN:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(x => { return action.payload === x.id ? { ...x, currentState: false } : { ...x } }),\r\n                alltodos: state.alltodos.map(x => { return action.payload === x.id ? { ...x, currentState: false } : { ...x } }),\r\n            }\r\n\r\n        case GLOBAL_SEARCH:\r\n            return {\r\n                ...state,\r\n                todos: state.alltodos.filter(x => { return x.title.includes(action.payload) || x.description.includes(action.payload) })\r\n            }\r\n\r\n        case BULK_DONE:\r\n            ids = action.payload.map(x => x);\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(x => { return ids.includes(x.id) ? { ...x, currentState: true, checked:false } : { ...x } }),\r\n                alltodos: state.alltodos.map(x => { return ids.includes(x.id) ? { ...x, currentState: true, checked:false } : { ...x } })\r\n            }\r\n\r\n        case BULK_PENDING:\r\n            ids = action.payload.map(x => x);\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(x => { return ids.includes(x.id) ? { ...x, currentState: false, checked:false } : { ...x } }),\r\n                alltodos: state.alltodos.map(x => { return ids.includes(x.id) ? { ...x, currentState: false, checked:false } : { ...x } }),\r\n            }\r\n\r\n        case UPDATE_CHECKBOX:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(x => { return action.payload.id === x.id ? { ...x, checked: action.payload.ischecked } : { ...x } }),\r\n                alltodos: state.alltodos.map(x => { return action.payload.id === x.id ? { ...x, checked: action.payload.ischecked  } : { ...x } }),\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default TodoReducer;\r\n","const data = [\n  {\n    id: \"212724354\",\n    currentState: true,\n    title: \"Watch Movie\",\n    description: \"I have to watch new movies\",\n    createdAt: \"2018-04-12\",\n    dueDate: \"2016-12-06\",\n    priority: \"medium\",\n    checked: false\n  },\n  {\n    id: \"088134178\",\n    currentState: false,\n    title: \"Go to Gym\",\n    description: \"I Have to go to gym\",\n    createdAt: \"2018-02-28\",\n    dueDate: \"2014-06-04\",\n    priority: \"high\",\n    checked: false\n  },\n  {\n    id: \"400748320\",\n    currentState: true,\n    title: \"Meet friends\",\n    description: \"I Have to meet Friends\",\n    createdAt: \"2018-08-12\",\n    dueDate: \"2019-04-12\",\n    priority: \"medium\",\n    checked: false\n  },\n  {\n    id: \"077665604\",\n    currentState: false,\n    title: \"Buy Grocery\",\n    description: \"I Have to buy grocerry \",\n    createdAt: \"2018-04-02\",\n    dueDate: \"2018-06-12\",\n    priority: \"low\",\n    checked: false\n  },\n  {\n    id: \"436412811\",\n    currentState: false,\n    title: \"Do Coding\",\n    description: \"I have to complete my task\",\n    createdAt: \"2018-09-12\",\n    dueDate: \"2019-10-14\",\n    priority: \"high\",\n    checked: false\n  }\n];\n\nexport default data;\n","\r\nimport { SET_FORM_TO_EDIT, CLEAR_FROM_TO_EDIT } from \"../../actions\";\r\n\r\nconst FormEditReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case SET_FORM_TO_EDIT:\r\n            return (state = action.payload);\r\n\r\n        case CLEAR_FROM_TO_EDIT:\r\n            return (state = null);\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default FormEditReducer;\r\n","\r\nimport { SORT_BY_SUMMARY, SORT_BY_PRIORITY, SORT_BY_CREATED_ON, SORT_BY_DUE_DATE, SORT_BY_ACTIONS } from \"../../actions\";\r\n\r\nlet intialState = {\r\n    sortBy: null,\r\n    type: null\r\n}\r\nconst SortTodoReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case SORT_BY_SUMMARY:\r\n            if (state.sortBy === \"title\") {\r\n                return { sortBy: \"title\", type: !state.type };\r\n            } else return { sortBy: \"title\", type: true };\r\n\r\n        case SORT_BY_PRIORITY:\r\n            if (state.sortBy === \"priority\") {\r\n                return { sortBy: \"priority\", type: !state.type };\r\n            } else return { sortBy: \"priority\", type: true };\r\n\r\n        case SORT_BY_CREATED_ON:\r\n            if (state.sortBy === \"created_on\") {\r\n                return { sortBy: \"created_on\", type: !state.type };\r\n            } else return { sortBy: \"created_on\", type: true };\r\n\r\n        case SORT_BY_DUE_DATE:\r\n            if (state.sortBy === \"due_date\") {\r\n                return { sortBy: \"due_date\", type: !state.type };\r\n            } else return { sortBy: \"due_date\", type: true };\r\n\r\n        case SORT_BY_ACTIONS:\r\n            if (state.sortBy === \"actions\") {\r\n                return { sortBy: \"actions\", type: !state.type };\r\n            } else return { sortBy: \"actions\", type: true };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default SortTodoReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport AsyncTaskReducer from \"./reducers/asynctaskreducer\";\nimport TabFilterReducer from \"./reducers/tabfilterreducer\";\nimport TodoReducer from \"./reducers/todoreducer\";\nimport FormEditReducer from \"./reducers/formeditreducer\";\nimport SortTodoReducer from \"./reducers/sorttodoreducer\";\nimport thunk from \"redux-thunk\";\n\nconst reducers = combineReducers({\n  isFetching: AsyncTaskReducer,\n  filter: TabFilterReducer,\n  todos: TodoReducer,\n  formEdit: FormEditReducer,\n  sort: SortTodoReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\n// if (process.env.NODE_ENV === \"development\") {\n//   window.store = store;\n// }\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}